{"version":3,"sources":["services/contacts.js","components/Persons.js","components/NewContact.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Person","person","persons","setPersons","message","name","number","onClick","window","confirm","contactServices","filter","p","type","catch","error","console","log","Persons","match","personsToShow","toLowerCase","includes","map","NewContact","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","sameName","d","length","updatedEntry","newEntry","concat","value","onChange","target","SetSearch","newSearch","handleSearchChange","Notification","className","App","setNewSearch","setMessageDef","setMessage","msg","setTimeout","useEffect","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.aaaaf6e2.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst replace = (id,newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, remove, replace}","import contactServices from './../services/contacts'\r\n\r\nconst Person = ({ person, persons, setPersons, message }) => {\r\n    const poista = () => {\r\n      if (!window.confirm(`delete contact ${person.name}?`)) return;\r\n      //console.log('poistetaan', person.name)\r\n      contactServices.remove(person.id).then(response => {\r\n        setPersons(\r\n          persons.filter(p => p.id !== person.id))//handle exceptions\r\n          message({message:`${person.name} has been removed`, type:\"msg\"})\r\n      }).catch(error => {\r\n        message({message: `${person.name} was already removed`, type: \"msg\"})\r\n        console.log(\"could not delete beacuse person was not found\",person)\r\n        contactServices.getAll().then(response => {\r\n          setPersons(response)\r\n        })\r\n      })\r\n    }\r\n    return (\r\n      <tr>\r\n        <td>{person.name}</td>\r\n        <td>{person.number}</td>\r\n        <td><button onClick={poista}>delete</button></td>\r\n      </tr>\r\n    )\r\n  }\r\n  \r\n  const Persons = ({ persons, setPersons, match ,message }) => {\r\n    const personsToShow = persons.filter(p =>\r\n      p.name.toLowerCase().includes(match.toLowerCase())\r\n    )\r\n    return (\r\n      <table>\r\n        <tbody>\r\n          {personsToShow.map(person =>\r\n            <Person key={person.id} person={person} \r\n            persons={persons} setPersons={setPersons} message={message}/>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n\r\n  export default Persons","import {useState} from 'react'\r\nimport contactServices from './../services/contacts'\r\n\r\nconst NewContact = ({ persons, setPersons, message}) => {\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n  \r\n    const addName = (event) => {\r\n      event.preventDefault()\r\n      const sameName = persons.filter(d => d.name === newName);\r\n      if (sameName.length > 0) {\r\n        if (!window.confirm(`\r\n        ${newName} has already been added, update number?`)) return;\r\n        else {\r\n          const updatedEntry = { ...sameName[0], number: newNumber }\r\n          contactServices.replace(sameName[0].id, updatedEntry)\r\n            .then(response => {\r\n              setPersons(\r\n                persons.map(p => p.id === sameName[0].id ? updatedEntry : p))\r\n              message({message: `number updated`,type: \"msg\"})\r\n            }).catch(error => {\r\n                message({message: `${newName} was removed`, type: \"error\"})\r\n              console.log(\"could not update beacuse person was not found\",newName)\r\n              contactServices.getAll().then(response => {\r\n                setPersons(response)\r\n              })\r\n            })\r\n        }\r\n      }\r\n      else {\r\n        const newEntry = {\r\n          name: newName,\r\n          number: newNumber\r\n        }\r\n        contactServices.create(newEntry)\r\n          .then(response => {\r\n            //console.log(response)\r\n            setPersons(persons.concat(response))\r\n            message({message:`added new contact ${newEntry.name}`, type: \"msg\"})\r\n          })\r\n          .catch(error => {\r\n            console.log(error.response.data)\r\n            message({message: error.response.data.error, type: \"error\"})\r\n          })\r\n      }\r\n    }\r\n  \r\n    const handleNameChange = (event) => {\r\n      setNewName(event.target.value)\r\n    }\r\n  \r\n    const handleNumberChange = (event) => {\r\n      setNewNumber(event.target.value)\r\n    }\r\n    return (\r\n      <form onSubmit={addName}>\r\n        <div>\r\n          name: <input value={newName}\r\n            onChange={handleNameChange} />\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber}\r\n            onChange={handleNumberChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>)\r\n  }\r\n  \r\nexport default NewContact","import { useState, useEffect } from 'react'\nimport contactServices from './services/contacts'\nimport Persons from './components/Persons'\nimport NewContact from './components/NewContact'\n\nconst SetSearch = ({ newSearch, handleSearchChange }) => {\n  return (\n    <div>\n      search: <input value={newSearch}\n        onChange={handleSearchChange} />\n    </div>\n  )\n}\n\nconst Notification = ({ message}) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className={message.type}>\n      {message.message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newSearch, setNewSearch] = useState('')\n  const [message, setMessageDef] = useState(null)\n\n  const setMessage  = msg=>{\n    setTimeout(() => setMessageDef(null),2000)\n    setMessageDef({\n      message: msg.message,\n      type: msg.type\n    })\n  }\n\n  useEffect(() => {\n    contactServices.getAll().then(response => {\n      setPersons(response)\n    })\n  }, [])\n\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  return (\n    <div>\n      <Notification message={message}/>\n      <h1>Phonebook</h1>\n      <h2>Add a new contact</h2>\n      <NewContact persons={persons} setPersons={setPersons} message={setMessage}/>\n      <h2>Numbers</h2>\n      <SetSearch newSearch={newSearch} handleSearchChange={handleSearchChange} />\n      <Persons persons={persons} setPersons={setPersons}\n       match={newSearch} message={setMessage}/>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')).render(<App />)\n"],"sourceRoot":""}